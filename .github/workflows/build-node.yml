name: Node.js CI

on: [ push, pull_request ]

jobs:
  build:
    name: Build the site

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 19.8.1
      uses: actions/setup-node@v3
      with:
        node-version: '19.8.1'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run dev:build

  lint:
    name: Check code standards

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 19.8.1
      uses: actions/setup-node@v3
      with:
        node-version: '19.8.1'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run linter
      run: npm run lint

  test:
    name: Run tests

    runs-on: ubuntu-latest

    # From https://gist.github.com/2color/537f8ef13ecec80059abb007839a6878
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub PostgreSQL image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/sketchbook_seminar?schema=public
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 19.8.1
        uses: actions/setup-node@v3
        with:
          node-version: '19.8.1'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Set up database
        run: npm run db:migrate
      - name: Run jest
        run: npm run test

    
